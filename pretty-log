#!/usr/bin/python

# Print geocache_logs.xml log entries in a nice format

# todo: add date range argument

import sys
from datetime import datetime,timedelta
from bs4 import BeautifulSoup
import webbrowser

# default
days_before = 12

def handle_xml_file(xmlfile):
        file=open(xmlfile, 'r')
        cnt = 0
        found_count = 0
        dnf_count = 0
        soup = BeautifulSoup(file, "lxml")

        # get the last time stamp from the logs file to determine the timezone to use
        temp_time = datetime.strptime(soup.find_all('log')[-1].find("time").string, '%Y-%m-%dT%H:%M:%S%z')
        now = datetime.now(temp_time.tzinfo)
        earliest_time = now - timedelta(days=days_before)
        
        print ("===================== " + xmlfile + " =============================")
        for log in soup.find_all('log'):
                gc_code = log.find("code").string
                gc_time = log.find("time").string
                gc_result = log.find("result").string
                gc_comment = log.find("comment").string

                log_time = datetime.strptime(gc_time, '%Y-%m-%dT%H:%M:%S%z')
                # if date not in date range then continue

                #print(log_time)
                #print(earliest_time)
                #print(log_time - earliest_time)

                if(log_time < earliest_time):
                        continue
                
                cnt += 1
                print("\t\t\t\t # " + str(cnt))

                print("GC Code: " + gc_code)
                print("Time   : " + gc_time)
                print("Result : " + gc_result)
                print("Comment: " + (gc_comment if gc_comment is not None else ""))


                if(gc_result == "found it"):
                        found_count = found_count + 1
                elif(gc_result == "did not find"):
                        dnf_count = dnf_count + 1
                
                uri = 'https://www.geocaching.com/play/geocache/' + gc_code + '/log'
                print("URI:   : " + uri)

                if(open_in_browser):
                        webbrowser.open(uri)

                
                print('---------------------------------------------------------------')
        print("FIND COUNT:  {0} ".format(str(found_count)))
        print("DNF  COUNT:  {0} ".format(str(dnf_count)))


#TODO add args parsing 
if (len(sys.argv) > 1):                
        file =  sys.argv[1]
        if(len(sys.argv) > 2):
                days_before = int(sys.argv[2])
else:
        file = "/home/brian/Dropbox/geocaching/geocache_logs.xml"

open_in_browser = False;
handle_xml_file(file)


